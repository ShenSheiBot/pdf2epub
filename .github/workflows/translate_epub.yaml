name: Translate EPUB

on:
  workflow_dispatch:

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install poetry
        poetry config virtualenvs.create false
        poetry install --no-root

    - name: Copy input.epub and config.yaml
      run: |
        echo "${{ secrets.CONFIG }}" > config.yaml
        # Extract values from config.yaml
        TITLE=$(grep "^title:" config.yaml | cut -d ":" -f2- | xargs)
        S3_ACCESS_KEY=$(grep "^s3_access_key_id:" config.yaml | cut -d ":" -f2- | xargs)
        S3_SECRET_KEY=$(grep "^s3_secret_access_key:" config.yaml | cut -d ":" -f2- | xargs)
        S3_ENDPOINT=$(grep "^s3_endpoint:" config.yaml | cut -d ":" -f2- | xargs)
        S3_BUCKET_NAME=$(grep "^s3_bucket_name:" config.yaml | cut -d ":" -f2- | xargs)
        GOOGLE_API_KEY=$(grep "^google_api_key:" config.yaml | cut -d ":" -f2- | xargs)
        
        # Add dynamic masking for sensitive values
        echo "::add-mask::$S3_ACCESS_KEY"
        echo "::add-mask::$S3_SECRET_KEY"
        echo "::add-mask::$GOOGLE_API_KEY"
        
        # Add src to PYTHONPATH
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        
        # Download files using extracted values
        python src/utils/monitor.py output/$TITLE $TITLE $S3_ACCESS_KEY $S3_SECRET_KEY $S3_ENDPOINT $S3_BUCKET_NAME --download

    - name: Translate EPUB
      run: |
        # Extract values from config.yaml
        TITLE=$(grep "^title:" config.yaml | cut -d ":" -f2- | xargs)
        S3_ACCESS_KEY=$(grep "^s3_access_key_id:" config.yaml | cut -d ":" -f2- | xargs)
        S3_SECRET_KEY=$(grep "^s3_secret_access_key:" config.yaml | cut -d ":" -f2- | xargs)
        S3_ENDPOINT=$(grep "^s3_endpoint:" config.yaml | cut -d ":" -f2- | xargs)
        S3_BUCKET_NAME=$(grep "^s3_bucket_name:" config.yaml | cut -d ":" -f2- | xargs)
        
        # Add dynamic masking for sensitive values
        echo "::add-mask::$S3_ACCESS_KEY"
        echo "::add-mask::$S3_SECRET_KEY"
        
        # Add src to PYTHONPATH
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        
        # Run monitor in background with extracted values
        python src/utils/monitor.py output/$TITLE $TITLE $S3_ACCESS_KEY $S3_SECRET_KEY $S3_ENDPOINT $S3_BUCKET_NAME & 
        
        # Check if we should resume translation
        if [ -f "output/$TITLE/translation_progress.json" ]; then
          echo "Translation progress file found, resuming translation"
          RESUME_FLAG="--resume"
        else
          echo "Starting new translation"
          RESUME_FLAG=""
        fi
        
        # Run translate_epub.py
        python src/translate_epub.py --input output/$TITLE/$TITLE.epub --config config.yaml $RESUME_FLAG
        
        # Run final upload with extracted values
        python src/utils/monitor.py output/$TITLE $TITLE $S3_ACCESS_KEY $S3_SECRET_KEY $S3_ENDPOINT $S3_BUCKET_NAME --final
